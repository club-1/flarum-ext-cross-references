{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC;AACuB;AACT;AAAA,IAG5BG,wBAAwB;EAAA;EAAA;IAAA;EAAA;EAAA,yBACpCC,SAAS,GAAhB,mBAAiBC,KAAK,EAAE;IACtB,WAAMD,SAAS,YAACC,KAAK;IAErB,IAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAI,CAACC,OAAO,EAAE,CAAC,CAAC,CAAC;IACxCH,KAAK,CAACI,MAAM,GAAGT,qEAAiB,CAAC,aAAa,EAAEM,QAAQ,CAAC;EAC3D,CAAC;EAAA;EAAA,OACDM,IAAI,GAAJ,gBAAO;IACL,OAAO,cAAc;EACvB,CAAC;EAAA,OAEDC,cAAc,GAAd,0BAAiB;IACf,OAAO,sEAAsE;EAC/E,CAAC;EAAA,OAEDC,eAAe,GAAf,2BAAkB;IAChB,OAAO;MACLL,MAAM,EAAE,EAAC,sEAAI;QAAC,IAAI,EAAET,6DAAS,CAAC,YAAY,EAAE;UAACgB,EAAE,EAAE,IAAI,CAACX,KAAK,CAACI,MAAM,CAACO,EAAE;QAAE,CAAC;MAAE,GAAE,IAAI,CAACX,KAAK,CAACI,MAAM,CAACQ,KAAK,EAAE;IACvG,CAAC;EACH,CAAC;EAAA;AAAA,EAnBmDhB,0EAAS;;;;;;;;;;;;;;;;AC1B/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC;AAC0C;AAE7ED,wEAAoB,CAAC,oCAAoC,EAAE,YAAM;EAC/DA,6FAAuC,GAAGG,4EAAwB;AACpE,CAAC,CAAC;;;;;;;;;;;AC1BF;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;ACAiD;AAClC,SAASoB,cAAc,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAC3DD,QAAQ,CAACE,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACH,UAAU,CAACC,SAAS,CAAC;EACxDF,QAAQ,CAACE,SAAS,CAACG,WAAW,GAAGL,QAAQ;EACzCF,8DAAc,CAACE,QAAQ,EAAEC,UAAU,CAAC;AACtC;;;;;;;;;;;;;;;ACLe,SAASK,eAAe,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC5CF,eAAe,GAAGH,MAAM,CAACL,cAAc,GAAGK,MAAM,CAACL,cAAc,CAACW,IAAI,EAAE,GAAG,SAASH,eAAe,CAACC,CAAC,EAAEC,CAAC,EAAE;IACtGD,CAAC,CAACG,SAAS,GAAGF,CAAC;IACf,OAAOD,CAAC;EACV,CAAC;EACD,OAAOD,eAAe,CAACC,CAAC,EAAEC,CAAC,CAAC;AAC9B;;;;;;UCNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@club-1/flarum-ext-cross-references/./src/forum/components/DiscussionReferencedPost.js","webpack://@club-1/flarum-ext-cross-references/./src/forum/index.ts","webpack://@club-1/flarum-ext-cross-references/external root \"flarum.core.compat['common/components/Link']\"","webpack://@club-1/flarum-ext-cross-references/external root \"flarum.core.compat['forum/app']\"","webpack://@club-1/flarum-ext-cross-references/external root \"flarum.core.compat['forum/components/EventPost']\"","webpack://@club-1/flarum-ext-cross-references/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@club-1/flarum-ext-cross-references/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@club-1/flarum-ext-cross-references/webpack/bootstrap","webpack://@club-1/flarum-ext-cross-references/webpack/runtime/compat get default export","webpack://@club-1/flarum-ext-cross-references/webpack/runtime/define property getters","webpack://@club-1/flarum-ext-cross-references/webpack/runtime/hasOwnProperty shorthand","webpack://@club-1/flarum-ext-cross-references/webpack/runtime/make namespace object"],"sourcesContent":["/*\n * This file is part of club-1/flarum-ext-cross-references.\n *\n * Copyright (c) 2022 Nicolas Peugnet <nicolas@club1.fr>.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport app from 'flarum/forum/app';\nimport EventPost from 'flarum/forum/components/EventPost';\nimport Link from 'flarum/common/components/Link';\n\n\nexport default class DiscussionReferencedPost extends EventPost {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    const sourceId = attrs.post.content()[0];\n    attrs.source = app.store.getById('discussions', sourceId);\n  }\n  icon() {\n    return 'fas fa-reply';\n  }\n\n  descriptionKey() {\n    return 'club-1-cross-references.forum.post_stream.discussion_referenced_text';\n  }\n\n  descriptionData() {\n    return {\n      source: <Link href={app.route('discussion', {id: this.attrs.source.id()})}>{this.attrs.source.title()}</Link>\n    }\n  }\n}\n","/*\n * This file is part of club-1/flarum-ext-cross-references.\n *\n * Copyright (c) 2022 Nicolas Peugnet <nicolas@club1.fr>.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport app from 'flarum/forum/app';\nimport DiscussionReferencedPost from './components/DiscussionReferencedPost';\n\napp.initializers.add('club-1/flarum-ext-cross-references', () => {\n  app.postComponents.discussionReferenced = DiscussionReferencedPost;\n});\n","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/EventPost'];","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["app","EventPost","Link","DiscussionReferencedPost","initAttrs","attrs","sourceId","post","content","source","store","getById","icon","descriptionKey","descriptionData","route","id","title","initializers","add","postComponents","discussionReferenced","setPrototypeOf","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","bind","__proto__"],"sourceRoot":""}